global
    maxconn 1000000
    nbthread 16
    cpu-map auto:1/1-16 0-15
    stats socket /var/run/haproxy.sock mode 660 level admin
    stats timeout 30s
    tune.ssl.default-dh-param 2048
    
    # Otimizações para alta performance
    tune.bufsize 32768
    tune.maxrewrite 8192
    tune.h2.max-concurrent-streams 100
    
defaults
    mode http
    timeout connect 5000ms
    timeout client 300000ms
    timeout server 300000ms
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    
    # Compressão
    compression algo gzip
    compression type text/html text/plain text/css application/json image/svg+xml
    
    # HTTP/2
    option http-use-htx

# Stats interface
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE

# Frontend HTTPS
frontend https_front
    bind *:443 ssl crt /etc/letsencrypt/live/tiles.lapig.iesa.ufg.br/fullchain.pem alpn h2,http/1.1
    
    # Rate limiting por IP
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 1000 }
    
    # Headers de segurança
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Roteamento por host
    acl is_tiles hdr(host) -i tiles.lapig.iesa.ufg.br
    acl is_tm1 hdr(host) -i tm1.lapig.iesa.ufg.br
    acl is_tm2 hdr(host) -i tm2.lapig.iesa.ufg.br
    acl is_tm3 hdr(host) -i tm3.lapig.iesa.ufg.br
    acl is_tm4 hdr(host) -i tm4.lapig.iesa.ufg.br
    acl is_tm5 hdr(host) -i tm5.lapig.iesa.ufg.br
    
    # Cache headers para tiles
    acl is_tile_request path_beg /api/layers/
    http-response set-header Cache-Control "public, max-age=2592000, immutable" if is_tile_request
    
    use_backend tiles_cluster if is_tiles
    use_backend tile_1 if is_tm1
    use_backend tile_2 if is_tm2
    use_backend tile_3 if is_tm3
    use_backend tile_4 if is_tm4
    use_backend tile_5 if is_tm5
    
    default_backend tiles_cluster

# Frontend HTTP (redirect para HTTPS)
frontend http_front
    bind *:80
    redirect scheme https if !{ ssl_fc }

# Backend cluster principal (round-robin com health check)
backend tiles_cluster
    balance roundrobin
    option httpchk GET /health
    
    # Configurações de retry e timeout
    retry-on all-retryable-errors
    http-request disable-l7-retry if METH_POST
    
    # Connection pooling
    http-reuse aggressive
    
    server tile1 app_tile_1:8080 check inter 2000 rise 2 fall 3 weight 100 maxconn 10000
    server tile2 app_tile_2:8080 check inter 2000 rise 2 fall 3 weight 100 maxconn 10000
    server tile3 app_tile_3:8080 check inter 2000 rise 2 fall 3 weight 100 maxconn 10000
    server tile4 app_tile_4:8080 check inter 2000 rise 2 fall 3 weight 100 maxconn 10000
    server tile5 app_tile_5:8080 check inter 2000 rise 2 fall 3 weight 100 maxconn 10000

# Backends individuais para hosts específicos
backend tile_1
    server tile1 app_tile_1:8080 check maxconn 10000

backend tile_2
    server tile2 app_tile_2:8080 check maxconn 10000

backend tile_3
    server tile3 app_tile_3:8080 check maxconn 10000

backend tile_4
    server tile4 app_tile_4:8080 check maxconn 10000

backend tile_5
    server tile5 app_tile_5:8080 check maxconn 10000